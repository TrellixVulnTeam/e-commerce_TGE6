{
  "name": "hapi-swagger",
  "description": "A swagger documentation UI generator plugin for hapi",
  "version": "7.2.0",
  "author": {
    "name": "Glenn Jones"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/glennjones/hapi-swagger.git"
  },
  "main": "index.js",
  "keywords": [
    "api",
    "docs",
    "swagger",
    "hapi",
    "joi"
  ],
  "license": "MIT",
  "engines": {
    "node": ">=4.0.0"
  },
  "dependencies": {
    "boom": "^4.0.0",
    "handlebars": "^4.0.5",
    "hoek": "^4.0.1",
    "http-status": "^0.2.3",
    "joi": "9.0.4",
    "json-schema-ref-parser": "^3.1.2",
    "swagger-parser": "^3.4.1"
  },
  "devDependencies": {
    "blipp": "^2.3.0",
    "chalk": "^1.1.3",
    "code": "^3.0.1",
    "coveralls": "^2.11.11",
    "good": "^7.0.1",
    "good-console": "^6.1.2",
    "good-squeeze": "^4.0.0",
    "h2o2": "^5.1.0",
    "hapi": "^14.0.0",
    "hapi-api-version": "^1.1.0",
    "hapi-auth-bearer-token": "^4.0.2",
    "hapi-auth-jwt2": "^7.0.1",
    "inert": "^4.0.1",
    "js2xmlparser": "^1.0.0",
    "lab": "^10.9.0",
    "swagger-client": "^2.1.14",
    "vision": "^4.0.1",
    "wreck": "^8.0.0",
    "jsonwebtoken": "^7.1.9"
  },
  "scripts": {
    "start": "node ./bin/test-server.js",
    "test": "lab -L -t 100",
    "test-cov-html": "lab -r html -o coverage.html",
    "test-cov-coveralls": "lab -r lcov | ./node_modules/.bin/coveralls"
  },
  "peerDependencies": {
    "hapi": "^14.0.0 || ^15.0.0 "
  },
  "readme": "# hapi-swagger\n\nThis is a [OpenAPI (aka Swagger)](https://openapis.org/) plug-in for [HAPI](http://hapijs.com/) When installed it will self document the API interface\nin a project.\n\n[![build status](https://img.shields.io/travis/glennjones/hapi-swagger.svg?style=flat-square)](http://travis-ci.org/glennjones/hapi-swagger)\n[![Coverage Status](https://img.shields.io/coveralls/glennjones/hapi-swagger/dev.svg?style=flat-square)](https://coveralls.io/r/glennjones/hapi-swagger)\n[![npm downloads](https://img.shields.io/npm/dm/hapi-swagger.svg?style=flat-square)](https://www.npmjs.com/package/hapi-swagger)\n[![MIT license](http://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://raw.github.com/glennjones/microformat-shic/master/license.txt)\n\n__Review [release notes for v7.0.0](https://github.com/glennjones/hapi-swagger/issues/325)__\n\n\n# Install\n\nYou can add the module to your HAPI using npm:\n\n    $ npm install hapi-swagger --save\n\nIf you want to view the documentation from your API you will also need to install the `inert` and `vision` plugs-ins which support templates and static\ncontent serving.\n\n    $ npm install inert --save\n    $ npm install vision --save\n\n# Documentation\n\n* [Options Reference](optionsreference.md)\n* [Usage Guide](usageguide.md)\n\n\n# Quick start\n\nIn your HAPI apps main JavaScript file add the following code to created a HAPI `server` object. You will also add the routes for you API as describe on hapijs.com site.\n\n\n```Javascript\nconst Hapi = require('hapi');\nconst Inert = require('inert');\nconst Vision = require('vision');\nconst HapiSwagger = require('hapi-swagger');\nconst Pack = require('./package');\n\nconst server = new Hapi.Server();\nserver.connection({\n        host: 'localhost',\n        port: 3000\n    });\n\nconst options = {\n    info: {\n            'title': 'Test API Documentation',\n            'version': Pack.version,\n        }\n    };\n\nserver.register([\n    Inert,\n    Vision,\n    {\n        'register': HapiSwagger,\n        'options': options\n    }], (err) => {\n        server.start( (err) => {\n           if (err) {\n                console.log(err);\n            } else {\n                console.log('Server running at:', server.info.uri);\n            }\n        });\n    });\n\nserver.route(Routes);\n```\n\n# Tagging your API routes\nAs a project may be a mixture of web pages and API endpoints you need to tag the routes you wish Swagger to\ndocument. Simply add the `tags: ['api']` property to the route object for any endpoint you want documenting.\n\nYou can even specify more tags and then later generate tag-specific documentation. If you specify\n`tags: ['api', 'foo']`, you can later use `/documentation?tags=foo` to load the documentation on the\nHTML page (see next section).\n\n```Javascript\n{\n    method: 'GET',\n    path: '/todo/{id}/',\n    config: {\n        handler: handlers.getToDo,\n        description: 'Get todo',\n        notes: 'Returns a todo item by the id passed in the path',\n        tags: ['api'], // ADD THIS TAG\n        validate: {\n            params: {\n                id : Joi.number()\n                        .required()\n                        .description('the id for the todo item'),\n            }\n        }\n    },\n}\n```\n\nOnce you have tagged your routes start the application. __The plugin adds a page into your site with the route `/documentation`__,\nso the the full URL for the above options would be `http://localhost:3000/documentation`.\n\n\n\n# Contributing\n\nRead the [contributing guidelines](https://github.com/glennjones/hapi-swagger/blob/master/.github/CONTRIBUTING.md) for details.\n\n\n\n\n# Thanks\nI would like to thank all that have contributed to the project over the last couple of years. This is a hard project to maintain, getting HAPI to work with Swagger\nis like putting a round plug in a square hole. Without the help of others it would not be possible.\n\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/glennjones/hapi-swagger/issues"
  },
  "homepage": "https://github.com/glennjones/hapi-swagger#readme",
  "_id": "hapi-swagger@7.2.0",
  "_from": "hapi-swagger@*"
}
